{
  "Create explorer": {
    "scope": "typescript",
    "prefix": "ex",
    "body": [
      "import {",
      "\tExplorer, Service,",
      "} from '@sendo/storage'",
      "",
      "export interface ${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}ServiceProps {",
      "\t$1",
      "}",
      "",
      "export interface ${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}ServiceResponse {",
      "\t$2",
      "}",
      "",
      "const REDUCER_NAME = '${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}Info'",
      "export class ${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}Service extends Service<",
      "\t${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}ServiceProps,",
      "\t${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}ServiceResponse",
      "> {",
      "\t// public domain = '$3'",
      "",
      "\tpublic async query(",
      "\t\tprops: ${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}ServiceProps,",
      "\t): Promise<{ url: string; options: RequestInit }> {",
      "\t\tconst baseUrl = '$4'",
      "\t\tconst url = new URL(baseUrl, this.domain)",
      "",
      "\t\treturn {",
      "\t\t\turl: url.href,",
      "\t\t\toptions: {",
      "\t\t\t\t",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "}",
      "",
      "const {",
      "\tuseBaseActionsHook,",
      "\tuseBaseQueryHook,",
      "} =",
      "\tExplorer.createBaseQueryModel<${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}ServiceProps>({",
      "\t\tservice: new ${TM_FILENAME_BASE/(.*)\\..+/${1:/pascalcase}/g}Service(),",
      "\t\tgetComputedPair: (props) => ({",
      "\t\t\tid: REDUCER_NAME,",
      "\t\t\tkeyed: '_',",
      "\t\t\tprops,",
      "\t\t}),",
      "\t\tcallbacks: {",
      "\t\t\tsuccess: async (results, other, extras) => ({}),",
      "\t\t\terror: async (error, other, extras) => ({}),",
      "\t\t},",
      "\t})",
      "",
      "export {",
      "\tuseBaseActionsHook,",
      "\tuseBaseQueryHook,",
      "}",
    ],
    "description": "Create explorer"
  },
}
